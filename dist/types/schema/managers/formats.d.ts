import type { SetableCriteria, Format } from '../formats';
export declare class FormatsManager {
    formats: Map<string, {
        defaultCriteria: {} | import("../formats/string/types").StringDefaultCriteria | import("../formats/record/types").RecordDefaultCriteria | import("../formats/array/types").ArrayDefaultCriteria;
        mount?(chunk: import("../services").MountingChunk, criteria: import("../formats/boolean/types").BooleanSetableCriteria | import("../formats/number/types").NumberSetableCriteria | import("../formats/string/types").StringSetableCriteria | import("../formats/symbol/types").SymbolSetableCriteria | import("../formats/array/types").ArraySetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>> | import("../formats/omega/types").OmegaSetableCriteria | import("../formats/record/types").RecordSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>> | import("../formats/struct/types").StructSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>> | import("../formats/tuple/types").TupleSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>> | import("../formats/union/types").UnionSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>>): void;
        check(chunk: import("../services").CheckingChunk, criteria: (import("../formats/types").StaticDefaultCriteria & import("../formats/string/types").StringDefaultCriteria & Omit<import("../formats/string/types").StringSetableCriteria, never> & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & Omit<import("../formats/symbol/types").SymbolSetableCriteria, never> & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & Omit<import("../formats/boolean/types").BooleanSetableCriteria, never> & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & Omit<import("../formats/number/types").NumberSetableCriteria, never> & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & import("../formats/array/types").ArrayDefaultCriteria & Omit<import("../formats/array/types").ArraySetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>>, "item"> & import("../formats/array/types").ArrayMountedCriteria & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & Omit<import("../formats/omega/types").OmegaSetableCriteria, "bitcode"> & import("../formats/omega/types").OmegaMountedCriteria & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & import("../formats/record/types").RecordDefaultCriteria & Omit<import("../formats/record/types").RecordSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>>, keyof import("../formats/record/types").RecordMountedCriteria> & import("../formats/record/types").RecordMountedCriteria & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & Omit<import("../formats/struct/types").StructSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>>, keyof import("../formats/struct/types").StructMountedCriteria<import("../formats/struct/types").StructSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>>>> & import("../formats/struct/types").StructMountedCriteria<import("../formats/struct/types").StructSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>>> & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & Omit<import("../formats/tuple/types").TupleSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>>, "tuple"> & import("../formats/tuple/types").TupleMountedCriteria & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & Omit<import("../formats/union/types").UnionSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>>, "union"> & import("../formats/union/types").UnionMountedCriteria & import("../formats/types").StaticMountedCriteria), value: unknown): import("../services").CheckingReject["code"] | null;
    }>;
    constructor();
    set(formats: Record<string, Format<SetableCriteria>>): void;
    get(type: string): {
        defaultCriteria: {} | import("../formats/string/types").StringDefaultCriteria | import("../formats/record/types").RecordDefaultCriteria | import("../formats/array/types").ArrayDefaultCriteria;
        mount?(chunk: import("../services").MountingChunk, criteria: import("../formats/boolean/types").BooleanSetableCriteria | import("../formats/number/types").NumberSetableCriteria | import("../formats/string/types").StringSetableCriteria | import("../formats/symbol/types").SymbolSetableCriteria | import("../formats/array/types").ArraySetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>> | import("../formats/omega/types").OmegaSetableCriteria | import("../formats/record/types").RecordSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>> | import("../formats/struct/types").StructSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>> | import("../formats/tuple/types").TupleSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>> | import("../formats/union/types").UnionSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>>): void;
        check(chunk: import("../services").CheckingChunk, criteria: (import("../formats/types").StaticDefaultCriteria & import("../formats/string/types").StringDefaultCriteria & Omit<import("../formats/string/types").StringSetableCriteria, never> & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & Omit<import("../formats/symbol/types").SymbolSetableCriteria, never> & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & Omit<import("../formats/boolean/types").BooleanSetableCriteria, never> & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & Omit<import("../formats/number/types").NumberSetableCriteria, never> & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & import("../formats/array/types").ArrayDefaultCriteria & Omit<import("../formats/array/types").ArraySetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>>, "item"> & import("../formats/array/types").ArrayMountedCriteria & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & Omit<import("../formats/omega/types").OmegaSetableCriteria, "bitcode"> & import("../formats/omega/types").OmegaMountedCriteria & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & import("../formats/record/types").RecordDefaultCriteria & Omit<import("../formats/record/types").RecordSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>>, keyof import("../formats/record/types").RecordMountedCriteria> & import("../formats/record/types").RecordMountedCriteria & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & Omit<import("../formats/struct/types").StructSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>>, keyof import("../formats/struct/types").StructMountedCriteria<import("../formats/struct/types").StructSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>>>> & import("../formats/struct/types").StructMountedCriteria<import("../formats/struct/types").StructSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>>> & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & Omit<import("../formats/tuple/types").TupleSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>>, "tuple"> & import("../formats/tuple/types").TupleMountedCriteria & import("../formats/types").StaticMountedCriteria) | (import("../formats/types").StaticDefaultCriteria & Omit<import("../formats/union/types").UnionSetableCriteria<keyof import("../formats").FormatClassicTypes<keyof import("../formats").FormatClassicTypes<any>>>, "union"> & import("../formats/union/types").UnionMountedCriteria & import("../formats/types").StaticMountedCriteria), value: unknown): import("../services").CheckingReject["code"] | null;
    };
}
